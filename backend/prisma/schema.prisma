// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int        @id @default(autoincrement())
  name     String
  email    String     @unique
  password String
  posts    Posts[]
  comments Comments[]
  friends  Friends[]
  likes    Likes[]
}

model Profiles {
  id                   Int                    @id @default(autoincrement())
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  username             String
  website              String
  company              String
  authorEmail          String                 @unique
  isPublic             Boolean                @default(false)
  programmingLanguages ProgrammingLanguages[]
  picture              Picture?
  posts                Posts[]
  likes                Likes[]
}

model ProgrammingLanguages {
  id        Int      @id @default(autoincrement())
  language  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profileId Int
  profile   Profiles @relation(fields: [profileId], references: [id])

  @@unique([language, id])
}

model Picture {
  id        Int      @id @default(autoincrement())
  avatarUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profileId Int      @unique
  profile   Profiles @relation(fields: [profileId], references: [id])
}

model Posts {
  id        Int       @id @default(autoincrement())
  user      Users     @relation(fields: [user_Id], references: [id])
  user_Id   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  content   String?
  published Boolean   @default(false)
  viewCount Int       @default(0)
  profileId Int?
  profile   Profiles?  @relation(fields: [profileId], references: [id])
  likes     Likes[]
  comments  Comments[]
}

model Comments {
  id      Int    @id @default(autoincrement())
  post    Posts  @relation(fields: [post_Id], references: [id])
  post_Id Int
  user    Users  @relation(fields: [user_Id], references: [id])
  user_Id Int
  content String
  img     String
  audio   String
  file    String
}

model Friends {
  id      Int   @id @default(autoincrement())
  user    Users @relation(fields: [user_Id], references: [id])
  user_Id Int
}

model Likes {
  id         Int      @id @default(autoincrement())
  post       Posts    @relation(fields: [post_Id], references: [id])
  post_Id    Int
  user       Users    @relation(fields: [user_Id], references: [id])
  user_Id    Int
  profile    Profiles @relation(fields: [profile_Id], references: [id])
  profile_Id Int
}
